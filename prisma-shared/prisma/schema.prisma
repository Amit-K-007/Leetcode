generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(uuid())
  username    String       @unique
  email       String       @unique
  password    String
  name        String
  submissions Submission[]
  createdAt   DateTime     @default(now())
}

model Problem {
  id           Int          @id @default(autoincrement())
  title        String
  titleSlug    String       @unique
  description  String
  difficulty   Difficulty
  testCases    TestCase[]
  submissions  Submission[]
  createdAt    DateTime     @default(now())
  paramType    String[]
  returnType   String
  systemCode   String
  functionName String
}

model TestCase {
  id        String @id @default(uuid())
  problemId Int
  input     String
  output    String

  problem Problem @relation(fields: [problemId], references: [id], onDelete: Cascade)
}

model Submission {
  id               String           @id @default(uuid())
  userId           String
  problemId        Int
  code             String
  language         Language
  status           SubmissionStatus @default(PENDING)
  executionTime    Float?
  executionMemory  Float?
  correctTestCases Int?
  totalTestCases   Int?
  createdAt        DateTime         @default(now())

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  problem Problem @relation(fields: [problemId], references: [id], onDelete: Cascade)
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}

enum Language {
  PYTHON
  JAVA
  CPP
}

enum SubmissionStatus {
  PENDING
  ACCEPTED
  WRONG_ANSWER
  COMPILATION_ERROR
  RUNTIME_ERROR
  MEMORY_LIMIT_EXCEEDED
  TIME_LIMIT_EXCEEDED
  ERROR
}
